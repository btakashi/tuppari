{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","tagline":"The client library for Tuppari (= experimental implimentation of unbreakable message broadcasting system using WebSocket and Amazon Web Services)","body":"# Tuppari\r\n\r\nThis is repository contains Tuppari Command Line Interface and Node.js client library.\r\n\r\n## Prerequisites\r\n\r\n* Node.js (>= 0.6.13)\r\n* NPM\r\n* gcc\r\n    * If you are using Mac OS X and XCode 4.3+, you'll need to [Command Line Tools for XCode](https://developer.apple.com/downloads).\r\n* Browser that supports WebSocket\r\n    * Google Chrome (>= 14)\r\n    * FireFox (>= 5)\r\n    * IE (>= 10)\r\n\r\n## Installation\r\n\r\n### Install Tuppari Command Line Interface\r\n\r\nFirst, you should install Tuppari CLI, with npm do:\r\n\r\n```\r\nnpm install -g tuppari\r\n```\r\n\r\n### Create account\r\n\r\nIf you don't have tuppari account, you should create a new account.\r\nTo create a account, use register command.\r\n\r\n```\r\ntuppari register [YOUR_ACCOUNT_NAME]\r\nPassword: [ENTER YOUR PASSWORD]\r\n\r\nCreate new account name \"[YOUR_ACCOUNT_NAME]\" success.\r\n```\r\n\r\nAccount name should only include lower and uppercase letters, numbers and the following signs `_ - @ .`\r\nAccount name must be unique in this service, so you cannot regist the account name if someone is already registed same account name.\r\n\r\n## Quick start\r\n\r\n### Login\r\n\r\n```\r\ntuppari login\r\nAccount Name: [ENTER_YOUR_ACCOUNT_NAME]\r\nPassword: [ENTER_YOUR_PASSWORD]\r\n\r\nLogin success.\r\n```\r\n\r\n### Create new application\r\n\r\n```\r\ntuppari create [YOUR_APPLICATION_NAME]\r\n\r\nCreate a new application named \"[YOUR_APPLICATION_NAME]\" success.\r\nFollowing is the application Information to access from your code.\r\n{\r\n  \"applicationId\": \"[SHOW_YOUR_APPLICATION_ID]\",\r\n  \"accessKeyId\": \"[SHOW_YOUR_ACCESS_KEY_ID]\",\r\n  \"accessSercretKey\": \"[SHOW_YOUR_ACCESS_SECRET_KEY]\"\r\n}\r\n```\r\n\r\nMake a note of application information.\r\n\r\n### Create client\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"utf-8\"/>\r\n  <!-- 1. Include the Tuppari client JavaScript libraries on your page from CDN -->\r\n  <script src=\"http://cdn.tuppari.com/0.1.0/tuppari.js\"></script>\r\n  <script>\r\n    // 2. Instantiate connection object to tuppari server. \r\n    var client = tuppari.createClient({\r\n        applicationId: 'YOUR_APPLICATION_ID' // Replace this with your Application ID.\r\n    });\r\n    // 3. Create channel you want to use.\r\n    var channel = client.subscribe('your_channel');\r\n    // 4. Listen for some events on you channel\r\n    channel.bind('your_event', function (data) {\r\n      console.log('An event was triggered with message: %s', data);\r\n    });\r\n  </script>\r\n</head>\r\n<body>\r\n</body>\r\n</html>\r\n```\r\n\r\n### Trigger events from your Node.js code\r\n\r\nCreate package.json and app.js like below.\r\n\r\n#### package.json\r\n\r\n```json\r\n{\r\n  \"name\": \"helloworld\",\r\n  \"version\": \"0.1.0\",\r\n  \"dependencies\": {\r\n    \"tuppari\": \"0.1.0\"\r\n  }\r\n}\r\n```\r\n\r\n#### app.js\r\n\r\n```javascript\r\nvar Tuppari = require('tuppari');\r\n\r\nvar tuppari = new Tuppari({\r\n  applicationId: 'YOUR APPLICATION ID',\r\n  accessKeyId: 'YOUR ACCESS KEY ID',\r\n  accessSecretKey: 'YOUR ACCESS SECRET KEY'\r\n});\r\n\r\nvar channel = tuppari.join('your_channel');\r\n\r\nchannel.send('your_event', 'hello world', function (err, res, body) {\r\n  if (err) {\r\n    console.error(err);\r\n  }\r\n  console.log(res.statusCode, body);\r\n});\r\n```\r\n\r\nAfter create files, then type following commands to publish message from your code.\r\n\r\n```\r\ncd [YOUR_WORKING_DIRECTORY]\r\nnpm install\r\nnode app.js\r\n```\r\n\r\nCheck the browser's console, you can see the message below.\r\n\r\n```\r\nAn event was triggered with message: hello world\r\n```\r\n\r\n# Technology Overview\r\n\r\n## Server module\r\n\r\nSee [Tuppari Servers](https://github.com/hakobera/tuppari-servers) and it's [document](https://github.com/hakobera/tuppari-servers/wiki).\r\n\r\n## Infrastructure\r\n\r\n![Infrastructure Overview](https://cacoo.com/diagrams/1fKhpMubP7teRHxr-C00D6.png)\r\n\r\n# Contacts\r\n\r\nIf you have any question, contact [me](https://twitter.com/hakobera) via twitter.\r\n\r\n## License\r\n\r\nThe MIT License","name":"Tuppari"}